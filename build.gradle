//buildscript {
//	ext {
//		queryDslVersion = "5.0.0"
//		springCloudVersion = "2021.0.5"
//	}
//}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "4.0.0-alpha.1"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

allprojects {
	group = 'com.yosep.product'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}

}

//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//	}
//}

subprojects { // 각 모듈에 적용할 공통 설정
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies { // 롬복은 공통적으로 사용하는 의존성이니 여기서 끌어다 사용
		implementation 'com.googlecode.json-simple:json-simple:1.1.1'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
	}

	tasks.named('bootJar') { //빌드할 때 bootjar 파일로 하겠다는 의미
		enabled = false
	}

	tasks.named('jar') { //빌드할 때 jar 파일로 하겠다는 의미
		enabled = true
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

//ext {
//	set('snippetsDir', file("build/generated-snippets"))
//	set('springCloudVersion', "2022.0.2")
//}

//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
////	implementation 'org.springframework.boot:spring-boot-starter-amqp'
////	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
////	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
////	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
////	implementation 'org.redisson:redisson:3.21.3'
//	implementation 'org.springframework.boot:spring-boot-starter-graphql'
//	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
////	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
//	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
////	implementation 'org.apache.kafka:kafka-streams'
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
//	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
//	// QueryDSL 설정
//	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
//	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//	// -- QueryDSL ---
//
////	implementation 'org.springframework.kafka:spring-kafka'
//	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'com.mysql:mysql-connector-j'
//	annotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework:spring-webflux'
////	testImplementation 'org.springframework.amqp:spring-rabbit-test'
//	testImplementation 'org.springframework.graphql:spring-graphql-test'
////	testImplementation 'org.springframework.kafka:spring-kafka-test'
//	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
////	testImplementation 'org.springframework.security:spring-security-test'
//}
//
//tasks.named('test') {
//	outputs.dir snippetsDir
//	useJUnitPlatform()
//}
//
//tasks.named('asciidoctor') {
//	inputs.dir snippetsDir
//	dependsOn test
//}
//
//// Querydsl 설정부
//def generatedDir = 'src/main/generated'
//
//clean {
//	delete file (generatedDir)
//}